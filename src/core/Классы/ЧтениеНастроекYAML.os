#Использовать logos

Перем Лог;
Перем ПроцессорЧтения;

// Выполняет чтение параметров 
//
// Параметры:
//   ПараметрыПровайдера - Структура - структура настроек провайдера
// Возвращаемое значение:
//   Соответствие - итоговые параметры
//
Функция Прочитать(Знач ПутьКФайлу) Экспорт

	СтрокаYaml = ПолучитьТекстФайла(ПутьКФайлу);
	Лог.Отладка("Тест прочтенного файла: %1", СтрокаYaml);
	ПрочитанныеПараметры = ПроцессорЧтения.ПрочитатьYaml(СтрокаYaml);

	Возврат ПрочитанныеПараметры;

КонецФункции

Функция ПолучитьТекстФайла(Знач ПутьКФайлу)
	
	ЧтениеТекста = Новый ЧтениеТекста;
	ЧтениеТекста.Открыть(ПутьКФайлу);
	ТекстФайла = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();

	Возврат ТекстФайла;

КонецФункции

Процедура ПриСозданииОбъекта()

	ПутьКDLL = ОбъединитьПути(ТекущийСценарий().Каталог,"..", "bin", "YamlDotNetProcessor.dll");

	ФайлDLL = Новый Файл(ПутьКDLL);

	Если НЕ ФайлDLL.Существует() Тогда
		Лог.КритичнаяОшибка("Не найден файл <%1> чтение не возможно", ПутьКDLL);
		ВызватьИсключение ""
	КонецЕсли;

	ПодключитьВнешнююКомпоненту(ПутьКDLL);
	ПроцессорЧтения = Новый YamlПроцессорYamlDotNet;

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("oscript.lib.orca.yaml");
//Лог.УстановитьУровень(УровниЛога.Отладка);

