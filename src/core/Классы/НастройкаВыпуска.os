#Использовать configor
#Использовать yaml

Перем Настройки Экспорт;

Перем ОсновнаяНастройка;

Процедура ИнициализоватьСтруктуруНастроек()

	ОсновнаяНастройка = Новый КонструкторПараметров;

	НастройкаГитХаб = ОсновнаяНастройка.НовыеПараметры()
				.ПолеСтрока("СерверAPI api")
				.ПолеСтрока("АдресОтправки upload")
				.ПолеСтрока("АдресЗагрузки download")
				;

	ОсновнаяНастройка.ПолеСтрока("ИмяПроекта project_name")
				.ПолеОбъект("НастройкаВыпускаГитхаба releases", Новый ОтправкаВРелизыГитХаба)
				.ПолеМассив("НастройкиСборки builds", Новый СборкаПакета)
				.ПолеОбъект("НастройкаАрхивирования archive", Новый АрхивированиеПакета)
				.ПолеОбъект("НастройкаFPM fpm", Новый СборкаFPM)
				.ПолеОбъект("НастройкаРасчетаКонтрольныхСумм checksum", Новый КонтрольныеСуммыФайлов)
				.ПолеМассив("НастройкиСборкиДокерФайлов dockers", Новый СборкаДокерОбразов)
				.ПолеМассив("НастройкиArtifactory artifactories", Новый ОтправкаВArtifactory)
				.ПолеОбъект("ОписаниеИзменений changelog", Новый ОписаниеРелизаПакета)
				.ПолеСтрока("КаталогСборки dist")
				.ПолеОбъект("НастройкаСборки build", Новый СборкаПакета)
				.ПолеОбъект("НастройкаГитХаб gihub_urls", НастройкаГитХаб)
				;

КонецПроцедуры

Процедура ЗагрузитьИзФайла(Знач ПутьКФайлу) Экспорт
	
	Процессор = Новый ПарсерYAML;

	// Нижеследующий текст будет преобразован в массив строк
	СтрокаYaml = ПрочитатьФайл(ПутьКФайлу);

	РезультатЧтения = Процессор.ПрочитатьYaml(СтрокаYaml);
	ОсновнаяНастройка.ИзСоответствия(РезультатЧтения);

	Настройки = ОсновнаяНастройка.ВСтруктуру();

КонецПроцедуры

Функция ПрочитатьФайл(ПутьКФайлу)
	ЧтениеТекста = Новый ЧтениеТекста;
	ЧтениеТекста.Открыть(ПутьКФайлу);
	ТекстYaml = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	Возврат ТекстYaml;

КонецФункции

ИнициализоватьСтруктуруНастроек();