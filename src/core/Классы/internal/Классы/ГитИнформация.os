#Использовать gitrunner
#использовать logos

Перем Лог;

Процедура Запустить(Контекст) Экспорт
	
	ОписаниеГит = ПолучитьОписаниеГит(Контекст);

	Тег = ОписаниеГит.Тег;
	Коммит = ОписаниеГит.Коммит;

	Лог.Отладка("Получен тег <%1> коммит <%2>", Тег, Коммит);
	Если ПустаяСтрока(Тег)
		И НЕ Контекст.ЭтоСнимок Тогда
		Возврат;
	КонецЕсли;

	Контекст.УстановитьГитИнформацию(ОписаниеГит.Тег, ОписаниеГит.Коммит);

	УстановитьВерсию(Контекст, Тег, Коммит);

	Если Контекст.ПроверкаВерсии Тогда
		ПроверитьВерсию(Контекст, Тег, Коммит);
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьНастройкиПоУмолчанию(Контекст) Экспорт
	
КонецПроцедуры
	
Процедура УстановитьВерсию(Контекст, Знач Тег, Знач Коммит)
	
	Если Контекст.ЭтоСнимок Тогда
		Контекст.Версия = ПолучитьИмяСпаншота(Контекст, Тег, Коммит);
	Иначе
		Контекст.Версия = Тег; // TODO:Сделать обрезку v
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьВерсию(Контекст, Знач Тег, Знач Коммит)
	
КонецПроцедуры

Функция ПолучитьОписаниеГит(Контекст)
	
	ОписаниеГит =  Новый Структура("Тег, Коммит", "", "");

	ГитРепозиторий = Новый ГитРепозиторий();
	ГитРепозиторий.УстановитьТихийРежимРаботы();
	
	ГитРепозиторий.УстановитьРабочийКаталог(Контекст.РабочийКаталог);
	Лог.Отладка("Установлен рабочий каталог гит <%1>", Контекст.РабочийКаталог);
	Если НЕ ГитРепозиторий.ЭтоРепозиторий() Тогда
		Возврат ОписаниеГит;
	КонецЕсли;

	ПараметрыЗапуска = СтрРазделить("describe --tags --abbrev=0", " ");
	ГитРепозиторий.ВыполнитьКоманду(ПараметрыЗапуска);

	ОписаниеГит.Тег = ГитРепозиторий.ПолучитьВыводКоманды();

	ПараметрыЗапуска = СтрРазделить("rev-parse --short HEAD", " ");
	
	ГитРепозиторий.ВыполнитьКоманду(ПараметрыЗапуска);

	ОписаниеГит.Коммит = ГитРепозиторий.ПолучитьВыводКоманды();

	Возврат ОписаниеГит;

КонецФункции

Функция ПолучитьИмяСпаншота(Контекст, Знач Тег, Знач Коммит)
	
	Возврат "";

КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.orca.pipe.gitinfo");
// Лог.УстановитьУровень(УровниЛога.Отладка);
